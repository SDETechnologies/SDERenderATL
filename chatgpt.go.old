package main

import (
	"bytes"
	"context"
	"encoding/json"
	"fmt"
	"io"
	"net/http"
	"os"

	"github.com/joho/godotenv"
	openai "github.com/sashabaranov/go-openai"
)

func GetClient() *openai.Client {
	godotenv.Load()
	token := os.Getenv("OPEN_API_TOKEN")

	return openai.NewClient(token)
}

func SummarizeTone(ctx context.Context) error {
	client := &http.Client{}

	url := "https://api.openai.com/v1/engines/davinci-codex/completions"
	text := `Pro : Direct access from Airport to ATL downtown area.

Con : Signage in downtown area are lacking in the platform to which street exits.

Cheap and reliable way from airport to downtown. Entrance from airport is right next to the baggage claim, buy ticket and go up level to ride the MARTA into town. Bypass the ticket line by purchasing the ticket online... it is the busiest airport on the planet.

Got off at Peachtree and it was a maze without much signage, I end up walking out of the North exit and roam on the city streets southbound to the south exit. Station was quite deserted at night, kind of creepy.`

	prompt := fmt.Sprintf("Summarize the common issues from these review: %v", text)

	requestBody, err := json.Marshal(map[string]interface{}{
		"prompt":      prompt,
		"max_tokens":  150,
		"temperature": 0.7,
	})

	if err != nil {

		panic(err)
	}

	req, err := http.NewRequest("POST", url, bytes.NewBuffer(requestBody))
	if err != nil {
		panic(err)
	}
	req.Header.Set("Content-Type", "application/json")
	req.Header.Set("Authorization", fmt.Sprintf("Bearer %s", os.Getenv("OPEN_API_TOKEN")))

	resp, err := client.Do(req)
	if err != nil {
		panic(err)
	}
	defer resp.Body.Close()

	body, err := io.ReadAll(resp.Body)
	if err != nil {
		panic(err)
	}

	fmt.Println(string(body))

	return nil
}
